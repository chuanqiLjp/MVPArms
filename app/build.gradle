apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "me.jessyan.mvparms.demo"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        //定义全局通用的变量,不分debug和release模式,buildConfigField 一共有3个参数，第一个是数据类型，和Java的类型是对等的；第二个参数是常量名，这里是API_SERVER_URL；第三个参数就是你要配置的值。
        buildConfigField 'int', 'BTN_REPET_CLICK_PART_TIME', '5'//按钮重复点击的间隔时间,用于防抖操作
        buildConfigField 'int', 'pageNumber', '30'//分页展示的数据量
    }

    buildTypes {
        debug {
            //这两个变量是自定义的,自己也可以自定义字段,他会默认配置到BuildConfig中,app中可以根据这些字段执行一些操作
            buildConfigField "boolean", "LOG_DEBUG", "true" // 日志的调试模式
            buildConfigField "boolean", "USE_CANARY", "true"    //是否使用LeakCanary(内存泄漏检测)
            buildConfigField "boolean", "APP_DEBUG", "true"    //是否是调试模式(替换默认的DEBUG字段)
            buildConfigField "boolean", "LOG_DEBUG_API", "false"    //是否打印第三方框架的日志
            buildConfigField "boolean", "USE_DATA", "true"    //是否使用模拟数据
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false" // 日志的调试模式
            buildConfigField "boolean", "USE_CANARY", "false"    //是否使用LeakCanary(内存泄漏检测)
            buildConfigField "boolean", "APP_DEBUG", "false"    //是否是调试模式(替换默认的DEBUG字段)
            buildConfigField "boolean", "LOG_DEBUG_API", "false"    //是否打印第三方框架的日志
            buildConfigField "boolean", "USE_DATA", "false"    //是否使用模拟数据
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {//设置aar包的存放路径
        flatDir {
            dirs 'libs'
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //support
    implementation(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    //tools
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["progressmanager"]
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]
    //view
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["paginate"]
    //arms
    implementation project(':arms')
    //Github 仓库上最新的 Demo 具有下一个版本的新特性, 所以依赖最新的远程库会出现版本不兼容的情况, 详情请查看 https://github.com/JessYanCoding/MVPArms/wiki/Issues#2
//    implementation 'me.jessyan:arms:2.4.1'
    //test
    testImplementation rootProject.ext.dependencies["junit"]
    debugImplementation rootProject.ext.dependencies["canary-debug"]
    releaseImplementation rootProject.ext.dependencies["canary-release"]
    testImplementation rootProject.ext.dependencies["canary-release"]
}
